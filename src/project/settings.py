"""
Django settings for diffexpirweb project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from settings_overrider import override

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.abspath(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-x7bz4s*s_tu(uyofmz55fr&c#8@2_-&ci*451=kj5u@#_j)1v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
ROOT_URLCONF = 'project.urls'
WSGI_APPLICATION = 'project.wsgi.application'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djangobower',
    'compressor',

    'project.main',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'main/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/New_York'
USE_I18N = True
USE_L10N = True
USE_TZ = True
CSRF_COOKIE_NAME = 'diffexpirweb-csrftoken'
CSRF_COOKIE_HTTPONLY = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
    'djangobower.finders.BowerFinder',
)


STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR + '/' + os.path.join('var', 'data', 'static')
BOWER_COMPONENTS_ROOT = os.path.join(BASE_DIR, 'components')
#BOWER_PATH = 'bower'

BOWER_INSTALLED_APPS = (
    'underscore',
    'jquery',
    'jquery-ui',
    'd3',
    'd3-tip',
)

COMPRESS_ROOT = STATIC_ROOT
COMPRESS_URL = STATIC_URL
COMPRESS_ENABLED = False

yaml_var = 'DJANGO_SETTINGS_YAML'
yaml_path = os.getenv(yaml_var, os.path.join(BASE_DIR, 'etc', 'settings.yaml'))

# You can use prefixed env variables, e.g. DJANGO_DEBUG env variable becomes DEBUG setting
var_prefix = 'DJANGO_'

if os.path.exists(yaml_path):
    override(globals(), yaml=yaml_path)

override(globals(), env=var_prefix)

DATABASES = {
    'default': {
        'ENGINE': globals().get('DJANGO_DB_ENGINE'),
        'COMMAND_TIMEOUT': 120
    }
}


DEBUG = globals().get('DJANGO_DEBUG')

if globals().get('DJANGO_DB_SERVER', False):
    DATABASES['default']['HOST'] = globals().get('DJANGO_DB_SERVER')

if globals().get('DJANGO_DB_PORT', False):
    DATABASES['default']['PORT'] = globals().get('DJANGO_DB_PORT')

if globals().get('DJANGO_DB_NAME', False):
    DATABASES['default']['NAME'] = globals().get('DJANGO_DB_NAME')

if globals().get('DJANGO_DB_USER', False):
    DATABASES['default']['USER'] = globals().get('DJANGO_DB_USER')

if globals().get('DJANGO_DB_PASSWORD', False):
    DATABASES['default']['PASSWORD'] = globals().get('DJANGO_DB_PASSWORD')

if globals().get('DJANGO_DB_OPTIONS', False):
    DATABASES['default']['OPTIONS'] = globals().get('DJANGO_DB_OPTIONS')
